"""
InvenioRDM settings for GMAP project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://inveniordm.docs.cern.ch/reference/configuration/.
"""

from datetime import datetime
from flask_babelex import lazy_gettext as _

# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

# SECURITY WARNING: keep the secret key used in production secret!
# Do not commit it to a source code repository.
# TODO: Set
SECRET_KEY="CHANGE_ME"

# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
#APP_ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1']
APP_ALLOWED_HOSTS = ['10.72.254.252']
#APP_ALLOWED_HOSTS = []


# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

# TODO: Set
SQLALCHEMY_DATABASE_URI="postgresql+psycopg2://gmap:gmap@localhost/gmap"


# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html

APP_DEFAULT_SECURE_HEADERS = {
    'content_security_policy': {
        'default-src': [
            "'self'",
            'data:', # for fonts
            "'unsafe-inline'",  # for inline scripts and styles
            "blob:",            # for pdf preview
            # Add your own policies here (e.g. analytics)
        ],
    },
    'content_security_policy_report_only': False,
    'content_security_policy_report_uri': None,
    'force_file_save': False,
    'force_https': True,
    'force_https_permanent': False,
    'frame_options': 'sameorigin',
    'frame_options_allow_from': None,
    'session_cookie_http_only': True,
    'session_cookie_secure': True,
    'strict_transport_security': True,
    'strict_transport_security_include_subdomains': True,
    'strict_transport_security_max_age': 31556926,  # One year in seconds
    'strict_transport_security_preload': False,
}


# Flask-Babel
# ===========
# See https://flask-babel.tkte.ch/#configuration

# Default locale (language)
BABEL_DEFAULT_LOCALE = 'en'
# Default time zone
BABEL_DEFAULT_TIMEZONE = 'Europe/Zurich'


# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).
I18N_LANGUAGES = [
    # ('de', _('German')),
    # ('tr', _('Turkish')),
]


# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Frontpage title
THEME_FRONTPAGE_TITLE = "GMAP"
# Header logo
THEME_LOGO = 'images/invenio-rdm.svg'


# Invenio-App-RDM
# ===============
# See https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = './less/theme.less'


# Invenio-Records-Resources
# =========================
# See https://github.com/inveniosoftware/invenio-records-resources/blob/master/invenio_records_resources/config.py

# TODO: Set with your own hostname when deploying to production
SITE_UI_URL = "https://127.0.0.1"

SITE_API_URL = "https://127.0.0.1/api"

APP_RDM_DEPOSIT_FORM_DEFAULTS = {
    "publication_date": lambda: datetime.now().strftime("%Y-%m-%d"),
    "rights": [
        {
            "id": "cc-by-4.0",
            "title": "Creative Commons Attribution 4.0 International",
            "description": ("The Creative Commons Attribution license allows "
                            "re-distribution and re-use of a licensed work "
                            "on the condition that the creator is "
                            "appropriately credited."),
            "link": "https://creativecommons.org/licenses/by/4.0/legalcode",
        }
    ],
    "publisher": "GMAP",
}

# Invenio-RDM-Records
# ===================
# See https://github.com/inveniosoftware/invenio-rdm-records/blob/master/invenio_rdm_records/config.py
RDM_RECORDS_DOI_DATACITE_ENABLED = False
RDM_RECORDS_DOI_DATACITE_USERNAME = ""
RDM_RECORDS_DOI_DATACITE_PASSWORD = ""
RDM_RECORDS_DOI_DATACITE_PREFIX = ""
RDM_RECORDS_DOI_DATACITE_TEST_MODE = True

# Authentication - Invenio-Accounts and Invenio-OAuthclient
# =========================================================
# See: https://inveniordm.docs.cern.ch/customize/authentication/

# Invenio-Accounts
# ----------------
# See https://github.com/inveniosoftware/invenio-accounts/blob/master/invenio_accounts/config.py
ACCOUNTS_LOCAL_LOGIN_ENABLED = False  # enable local login
SECURITY_REGISTERABLE = False  # local login: allow users to register
SECURITY_RECOVERABLE = False  # local login: allow users to reset the password
SECURITY_CHANGEABLE = False  # local login: allow users to change psw
SECURITY_CONFIRMABLE = False  # require users to confirm e-mail address

# Invenio-OAuthclient
# -------------------
# See https://github.com/inveniosoftware/invenio-oauthclient/blob/master/invenio_oauthclient/config.py

from invenio_oauthclient.views.client import auto_redirect_login
ACCOUNTS_LOGIN_VIEW_FUNCTION = auto_redirect_login  # autoredirect to external login if enabled
OAUTHCLIENT_AUTO_REDIRECT_TO_EXTERNAL_LOGIN = False  # autoredirect to external login

# Invenio-UserProfiles
# --------------------
USERPROFILES_READ_ONLY = True  # allow users to change profile info (name, email, etc...)

# configure external login providers
OAUTHCLIENT_REMOTE_APPS = {
    "gitlab": dict(
        title='Gitlab-GMAP',
        description='Gitlab-GMAP login authentication',
        icon='fa fa-gitlab',
        params=dict(
            request_token_params={'scope': 'email profile api read_user'},
            base_url='https://git.europlanet-gmap.eu/api/v4',
            request_token_url=None,
            access_token_url="https://git.europlanet-gmap.eu/oauth/token",
            access_token_method='POST',
            authorize_url="https://git.europlanet-gmap.eu/oauth/authorize",
            consumer_key="749aef4da42760dc4d54399dcb0403f6ca21f122deadeff059e44dcb2f2fc482",
            consumer_secret="66f3ffe2e42ab5e270944a87c97822806a3de1a0248070fc25f78b2e2bd25b12"
        ),
        precedence_mask = {
            "email": True,
            "profile": {
                "username": True,
                # "full_name": False,
            }
        },
        authorized_handler="invenio_oauthclient.handlers:authorized_default_handler",
        disconnect_handler="invenio_oauthclient.handlers:disconnect_handler",
        #    	response_handler='invenio_oauthclient.handlers.rest:default_remote_response_handler',
        #        authorized_redirect_url='/',
        #        disconnect_redirect_url='/',
        #        signup_redirect_url='/',
        #        error_redirect_url='/'
    )
}

# class MyOAuthSettingsHelper(OAuthSettingsHelper):
#     def __init__():
#         super().__init__(
#             title="my plugin",
#             description="a description",
#             base_url='https://git.europlanet-gmap.eu/api/v4',
#             app_key="MY_APP_CREDENTIALS",
#             access_token_url="https://git.europlanet-gmap.eu/oauth/token",
#             authorize_url="https://git.europlanet-gmap.eu/oauth/authorize",
#         )
#
#     def get_handlers(self):
#         return dict(
#             authorized_handler='invenio_oauthclient.handlers'
#                                ':authorized_signup_handler',
#             disconnect_handler=my_disconnect_handler,
#             signup_handler=dict(
#                 info=my_account_info,
#                 setup=my_account_setup,
#                 view='invenio_oauthclient.handlers:signup_handler',
#             )
#         )
#
#     def get_rest_handlers(self):
#         return dict(
#             authorized_handler='invenio_oauthclient.handlers.rest'
#                                ':authorized_signup_handler',
#             disconnect_handler=my_disconnect_handler,
#             signup_handler=dict(
#                 info=my_account_info,
#                 setup=my_account_setup,
#                 view='invenio_oauthclient.handlers.rest:signup_handler',
#             ),
#             response_handler='invenio_oauthclient.handlers.rest'
#                              ':default_remote_response_handler',
#             authorized_redirect_url='/',
#             disconnect_redirect_url='/',
#             signup_redirect_url='/',
#             error_redirect_url='/'
#         )
# )
#
# def my_disconnect_handler(...):
#     ...
#
# def my_account_info(...):
#     gh = github3.login(token=resp['token'])
#     me = gh.me()
#     return dict(
#         user=dict(
#             email=_extract_email(gh),
#             profile=dict(
#                 username=me.login,
#                 full_name=me.name,
#             ),
#         ),
#         external_id=str(me.id),
#         external_method='github'
#     )
#
#
# def my_account_setup(...):
#     ...
#
# myOAuthHelper = MyOAuthSettingsHelper()
#
# OAUTHCLIENT_REMOTE_APPS = dict(
#     myoauth=myOAuthHelper.REMOTE_APP,
# )
#
# MY_APP_CREDENTIALS = dict(
#     consumer_key="749aef4da42760dc4d54399dcb0403f6ca21f122deadeff059e44dcb2f2fc482",
#     consumer_secret="66f3ffe2e42ab5e270944a87c97822806a3de1a0248070fc25f78b2e2bd25b12"
# )
